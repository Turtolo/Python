import random
import turtle
import time
import winsound
import os
import threading

# Window setup
window = turtle.Screen()
window.setup(0.5, 0.75)
window.bgcolor(0.2, 0.2, 0.2)
window.title("Pew Pew Tortle")
window.tracer(0)

# Constants
LEFT = -window.window_width() / 2
RIGHT = window.window_width() / 2
TOP = window.window_height() / 2
BOTTOM = -window.window_height() / 2
FLOOR_LEVEL = 0.9 * BOTTOM
GUTTER = 0.025 * window.window_width()

ALIEN_SPAWN_INTERVAL = 1.4
ALIEN_SPEED = 0.2
CANNON_STEP = 10
LASER_LENGTH = 20
LASER_SPEED = 2

# Game state
paused = True
score = 0
health = 5
lasers = []
aliens = []

# Text setup
text = turtle.Turtle()
text.penup()
text.hideturtle()
text.color(0, 0, 1)
text.setheading(90)

# Create laser cannon
cannon = turtle.Turtle()
cannon.penup()
cannon.color(1, 1, 1)
cannon.shape("square")
cannon.setposition(0, FLOOR_LEVEL)
cannon.turtlesize(1, 4)
cannon.stamp()
cannon.sety(FLOOR_LEVEL + 10)
cannon.turtlesize(1, 1.5)
cannon.stamp()
cannon.sety(FLOOR_LEVEL + 20)
cannon.turtlesize(0.8, 0.3)
cannon.stamp()
cannon.sety(FLOOR_LEVEL)




# SFX setup
current_dir = os.path.dirname(os.path.abspath(__file__))
pewpew = os.path.join(current_dir, "laser-shot-ingame-230500.wav")

# Play sound function
def play_sound():
    winsound.PlaySound(pewpew, winsound.SND_FILENAME)

# Movement functions
def move_left():
    new_x = cannon.xcor() - CANNON_STEP
    if new_x >= LEFT + GUTTER:
        cannon.setx(new_x)
        draw_cannon()

def move_right():
    new_x = cannon.xcor() + CANNON_STEP
    if new_x <= RIGHT - GUTTER:
        cannon.setx(new_x)
        draw_cannon()

# Draw cannon function
def draw_cannon():
    cannon.clear()
    cannon.turtlesize(1, 4)
    cannon.stamp()
    cannon.sety(FLOOR_LEVEL + 10)
    cannon.turtlesize(1, 1.5)
    cannon.stamp()
    cannon.sety(FLOOR_LEVEL + 20)
    cannon.turtlesize(0.8, 0.3)
    cannon.stamp()
    cannon.sety(FLOOR_LEVEL)
    window.update()

# Create laser function
def create_laser():
    laser = turtle.Turtle()
    laser.penup()
    laser.color(1, 0, 0)
    laser.hideturtle()
    laser.setposition(cannon.xcor(), cannon.ycor())
    laser.setheading(90)
    laser.forward(20)
    laser.pendown()
    laser.pensize(5)
    lasers.append(laser)
    threading.Thread(target=play_sound).start()

# Move laser function
def move_laser(laser):
    laser.clear()
    laser.forward(LASER_SPEED)
    laser.forward(LASER_LENGTH)
    laser.forward(-LASER_LENGTH)

# Create alien function
def create_alien():
    if not paused:
        alien = turtle.Turtle()
        alien.penup()
        alien.turtlesize(1.5)
        alien.setposition(random.randint(int(LEFT + GUTTER), int(RIGHT - GUTTER)), TOP)
        alien.shape("turtle")
        alien.setheading(-90)
        alien.color(random.random(), random.random(), random.random())
        aliens.append(alien)

# Remove sprite function
def remove_sprite(sprite, sprite_list):
    sprite.clear()
    sprite.hideturtle()
    window.update()
    sprite_list.remove(sprite)
    turtle.turtles().remove(sprite)

# Restart function
def restart():
    cannon.setx(0)

# Pause function
def pause():
    global paused
    paused = not paused

# Start screen function
def start_screen():
    start_text = turtle.Turtle()
    start_text.penup()
    start_text.hideturtle()
    start_text.color("white")
    start_text.goto(0, 50)
    start_text.write("Pew Pew Tortle", align="center", font=("Courier", 40, "bold"))
    start_text.goto(0, -20)
    start_text.write("Press 'Enter' to Start", align="center", font=("Courier", 20, "normal"))
    start_text.goto(0, -60)
    start_text.write("Use Left/Right Arrow to Move, Space to Shoot", align="center", font=("Courier", 16, "normal"))
    start_text.goto(0, -100)
    start_text.write("Press 'Q' to Quit", align="center", font=("Courier", 16, "normal"))

    def start_game():
        nonlocal start_text
        start_text.clear()
        global paused
        paused = False

    window.onkeypress(start_game, "Return")
    window.listen()

# Event bindings
window.onkeypress(create_laser, "space")
window.onkeypress(move_left, "Left")
window.onkeypress(move_right, "Right")
window.onkeypress(turtle.bye, "q")
window.onkeypress(pause, "p")

# Alien spawn timer
alien_timer = 0

# Show start screen
start_screen()

# Main game loop
while True:
    if not paused:
        if health == 0:
            turtle.bye()

        # Display score and health
        text.clear()
        text.write(
            f"""
            Health: {health}\n
            Score: {score}\n
            """,
            font=("Courier", 20, "bold"),
        )
        


        
        # Move lasers
        for laser in lasers:
            move_laser(laser)
            if laser.ycor() > TOP:
                remove_sprite(laser, lasers)

        # Spawn aliens
        if time.time() - alien_timer > ALIEN_SPAWN_INTERVAL:
            create_alien()
            alien_timer = time.time()

        # Move aliens and check for collisions
        for alien in aliens:
            alien.forward(ALIEN_SPEED)

        for alien in aliens.copy():
            if alien.ycor() <= FLOOR_LEVEL:
                health -= 1
                remove_sprite(alien, aliens)
                break

        for laser in lasers.copy():
            for alien in aliens.copy():
                if laser.distance(alien) < 20:
                    score += 1
                    remove_sprite(laser, lasers)
                    remove_sprite(alien, aliens)
                    break

    window.update()

turtle.done()
